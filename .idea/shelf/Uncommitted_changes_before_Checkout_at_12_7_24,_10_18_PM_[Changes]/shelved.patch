Index: ../Memomate/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.cs407.memoMate\">\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n        android:fullBackupContent=\"@xml/backup_rules\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.MemoMate\"\n        tools:targetApi=\"31\">\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".FragmentTestActivity\"\n            android:exported=\"true\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Memomate/app/src/main/AndroidManifest.xml b/../Memomate/app/src/main/AndroidManifest.xml
--- a/../Memomate/app/src/main/AndroidManifest.xml	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ b/../Memomate/app/src/main/AndroidManifest.xml	(date 1733630704796)
@@ -22,8 +22,14 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".FragmentTestActivity"
-            android:exported="true" />
+        <activity
+            android:name=".CalendarTestActivity"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
     </application>
 
 </manifest>
\ No newline at end of file
Index: ../Memomate/app/src/main/java/com/cs407/memoMate/CalendarFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs407.memoMate\n\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.widget.LinearLayout\nimport android.widget.TextView\nimport android.widget.ImageView\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.navigation.Navigation\nimport com.kizitonwose.calendar.core.CalendarDay\nimport com.kizitonwose.calendar.core.daysOfWeek\nimport com.kizitonwose.calendar.view.CalendarView\nimport com.kizitonwose.calendar.view.MonthDayBinder\nimport com.kizitonwose.calendar.view.ViewContainer\nimport java.time.LocalDate\nimport java.time.YearMonth\nimport java.time.format.DateTimeFormatter\nimport java.time.format.TextStyle\nimport java.util.Locale\nimport androidx.navigation.fragment.findNavController\n\n\nclass CalendarFragment : Fragment(R.layout.fragment_calendar) {\n\n    private var selectedDate: LocalDate? = null\n    private var currentMonth: YearMonth = YearMonth.now()\n    private val dateFormatter = DateTimeFormatter.ofPattern(\"MMMM yyyy\", Locale.getDefault())\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        val calendarView: CalendarView = view.findViewById(R.id.calendarView)\n        val titlesContainer: LinearLayout = view.findViewById(R.id.titlesContainer)\n        val monthTitle: TextView = view.findViewById(R.id.monthTitle)\n        val btnNextMonth: ImageView = view.findViewById(R.id.btnNextMonth)\n        val btnPrevMonth: ImageView = view.findViewById(R.id.btnPrevMonth)\n\n        setupWeekTitle(titlesContainer)\n\n        setupCalendar(calendarView, monthTitle)\n\n        btnNextMonth.setOnClickListener {\n            currentMonth = currentMonth.plusMonths(1)\n            updateMonthTitle(monthTitle)\n            calendarView.scrollToMonth(currentMonth)\n        }\n\n        btnPrevMonth.setOnClickListener {\n            currentMonth = currentMonth.minusMonths(1)\n            updateMonthTitle(monthTitle)\n            calendarView.scrollToMonth(currentMonth)\n        }\n    }\n\n    private fun setupWeekTitle(titlesContainer: LinearLayout) {\n        val daysOfWeek = daysOfWeek()\n        titlesContainer.removeAllViews()\n        daysOfWeek.forEach { dayOfWeek ->\n            val textView = TextView(context).apply {\n                layoutParams = LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT, 1f)\n                text = dayOfWeek.getDisplayName(TextStyle.SHORT, Locale.getDefault())\n                gravity = android.view.Gravity.CENTER\n                textSize = 14f\n                setTextColor(ContextCompat.getColor(requireContext(), R.color.black))\n            }\n            titlesContainer.addView(textView)\n        }\n    }\n\n    private fun setupCalendar(calendarView: CalendarView, monthTitle: TextView) {\n        val startMonth = currentMonth.minusMonths(10)\n        val endMonth = currentMonth.plusMonths(10)\n\n        calendarView.setup(startMonth, endMonth, daysOfWeek().first())\n        calendarView.scrollToMonth(currentMonth)\n\n        calendarView.dayBinder = object : MonthDayBinder<DayViewContainer> {\n            override fun create(view: View): DayViewContainer {\n                return DayViewContainer(view)\n            }\n\n            override fun bind(container: DayViewContainer, data: CalendarDay) {\n                container.textView.text = data.date.dayOfMonth.toString()\n\n                val today = LocalDate.now()\n\n                when {\n                    data.date == today -> {\n                        container.textView.setBackgroundResource(R.drawable.bg_today)\n                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))\n                    }\n                    data.date.month != currentMonth.month -> {\n                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.dark_gray))\n                        container.textView.alpha = 0.3f\n                    }\n                    else -> {\n                        container.textView.setBackgroundResource(R.drawable.bg_normal)\n                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))\n                        container.textView.alpha = 1f\n                    }\n                }\n\n//                container.textView.setOnClickListener {\n//                    if (data.date.month == currentMonth.month) {\n//                        val previousDate = selectedDate\n//                        selectedDate = data.date\n//                        previousDate?.let { calendarView.notifyDateChanged(it) }\n//                        selectedDate?.let { calendarView.notifyDateChanged(it) }\n//                    }\n//                }\n\n                container.textView.setOnClickListener {\n                    selectedDate = data.date\n\n                    // Navigate to MainPageFragment\n                    val mainPageFragment = MainPageFragment()\n\n                    // Use FragmentManager to replace the current fragment\n                    parentFragmentManager.beginTransaction()\n                        .replace(R.id.fragment_container, mainPageFragment)\n                        .addToBackStack(null) // Add to back stack for navigation history\n                        .commit()\n                }\n\n            }\n        }\n\n        updateMonthTitle(monthTitle)\n    }\n\n    private fun updateMonthTitle(monthTitle: TextView) {\n        monthTitle.text = currentMonth.format(dateFormatter)\n    }\n\n    inner class DayViewContainer(view: View) : ViewContainer(view) {\n        val textView: TextView = view.findViewById(R.id.calendarDayText)\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Memomate/app/src/main/java/com/cs407/memoMate/CalendarFragment.kt b/../Memomate/app/src/main/java/com/cs407/memoMate/CalendarFragment.kt
--- a/../Memomate/app/src/main/java/com/cs407/memoMate/CalendarFragment.kt	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ b/../Memomate/app/src/main/java/com/cs407/memoMate/CalendarFragment.kt	(date 1733631449682)
@@ -20,24 +20,59 @@
 import java.time.format.TextStyle
 import java.util.Locale
 import androidx.navigation.fragment.findNavController
+import com.cs407.memoMate.Data.NoteDatabase
+import com.cs407.memoMate.Data.Task
+import com.cs407.memoMate.Data.TaskDao
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.Job
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+import java.util.Date
 
 
 class CalendarFragment : Fragment(R.layout.fragment_calendar) {
 
     private var selectedDate: LocalDate? = null
     private var currentMonth: YearMonth = YearMonth.now()
+    private lateinit var taskDao: TaskDao
+    private lateinit var calendarView: CalendarView
     private val dateFormatter = DateTimeFormatter.ofPattern("MMMM yyyy", Locale.getDefault())
 
+
+    private val importanceColors = mapOf(
+        3 to R.color.high_importance,
+        2 to R.color.medium_importance,
+        1 to R.color.low_importance
+    )
+
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        val calendarView: CalendarView = view.findViewById(R.id.calendarView)
+        calendarView = view.findViewById(R.id.calendarView)
         val titlesContainer: LinearLayout = view.findViewById(R.id.titlesContainer)
         val monthTitle: TextView = view.findViewById(R.id.monthTitle)
         val btnNextMonth: ImageView = view.findViewById(R.id.btnNextMonth)
         val btnPrevMonth: ImageView = view.findViewById(R.id.btnPrevMonth)
 
+        //set up month title
+//        val currentDate = LocalDate.now()
+//        val formatter = DateTimeFormatter.ofPattern("MMMM yyyy", Locale.getDefault())
+//        val formattedDate = currentDate.format(formatter)
+//        monthTitle.text = formattedDate
+
+        val db = NoteDatabase.getDatabase(requireContext())
+        taskDao = db.taskDao()
+        Log.d("calendar", "Database initialized")
+
+        populateDatabaseWithDummyData(taskDao)
+        Log.d("calendar", "Dummy database added")
+
+        loadTaskData()
+        Log.d("calendar", "load tasks")
+
         setupWeekTitle(titlesContainer)
 
         setupCalendar(calendarView, monthTitle)
+        Log.d("calendar", "load tasks")
 
         btnNextMonth.setOnClickListener {
             currentMonth = currentMonth.plusMonths(1)
@@ -50,6 +85,7 @@
             updateMonthTitle(monthTitle)
             calendarView.scrollToMonth(currentMonth)
         }
+
     }
 
     private fun setupWeekTitle(titlesContainer: LinearLayout) {
@@ -84,30 +120,26 @@
 
                 val today = LocalDate.now()
 
-                when {
-                    data.date == today -> {
-                        container.textView.setBackgroundResource(R.drawable.bg_today)
-                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))
-                    }
-                    data.date.month != currentMonth.month -> {
-                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.dark_gray))
-                        container.textView.alpha = 0.3f
-                    }
-                    else -> {
-                        container.textView.setBackgroundResource(R.drawable.bg_normal)
-                        container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))
-                        container.textView.alpha = 1f
-                    }
+                // 获取当天的任务重要性
+                val importance = taskImportanceMap[data.date] ?: 0
+                val importanceColor = importanceColors[importance] ?: R.color.default_day
+
+                if (data.date == today) {
+                    // set today circle icon
+                    container.textView.setBackgroundResource(R.drawable.bg_today)
+                    container.textView.background.setTint(ContextCompat.getColor(requireContext(), importanceColor))
+                    container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))
+                } else if (data.date.month != currentMonth.month) {
+                    // 不是当前月的日期
+                    container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.dark_gray))
+                    container.textView.alpha = 0.3f
+                } else {
+                    // 普通日期，根据重要性设置背景
+                    container.textView.setBackgroundResource(R.drawable.bg_normal)
+                    container.textView.background.setTint(ContextCompat.getColor(requireContext(), importanceColor))
+                    container.textView.setTextColor(ContextCompat.getColor(requireContext(), R.color.black))
+                    container.textView.alpha = 1f
                 }
-
-//                container.textView.setOnClickListener {
-//                    if (data.date.month == currentMonth.month) {
-//                        val previousDate = selectedDate
-//                        selectedDate = data.date
-//                        previousDate?.let { calendarView.notifyDateChanged(it) }
-//                        selectedDate?.let { calendarView.notifyDateChanged(it) }
-//                    }
-//                }
 
                 container.textView.setOnClickListener {
                     selectedDate = data.date
@@ -121,8 +153,8 @@
                         .addToBackStack(null) // Add to back stack for navigation history
                         .commit()
                 }
-
             }
+
         }
 
         updateMonthTitle(monthTitle)
@@ -135,4 +167,74 @@
     inner class DayViewContainer(view: View) : ViewContainer(view) {
         val textView: TextView = view.findViewById(R.id.calendarDayText)
     }
+
+    private val taskImportanceMap = mutableMapOf<LocalDate, Int>()
+
+    private fun loadTaskData() {
+        CoroutineScope(Dispatchers.IO).launch {
+            val tasks = taskDao.getAllTasks()
+            val groupedByDate = tasks.groupBy { task ->
+                task.ddl.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate()
+            }
+            groupedByDate.forEach { (date, tasksOnDate) ->
+                val maxImportance = tasksOnDate.maxOfOrNull { it.significance } ?: 0
+                taskImportanceMap[date] = maxImportance
+            }
+            withContext(Dispatchers.Main) {
+                calendarView.notifyCalendarChanged()
+            }
+        }
+    }
+
+    //demo propose
+    private fun populateDatabaseWithDummyData(taskDao: TaskDao) : Job {
+        return CoroutineScope(Dispatchers.IO).launch {
+            val dummyTasks = listOf(
+                Task(
+                    noteId = 0, // Auto-generate ID
+                    noteTitle = "High Priority Task",
+                    noteAbstract = "This is a high priority task description.",
+                    ddl = Date(System.currentTimeMillis() + (2 * 24 * 60 * 60 * 1000)), // 2 days from now
+                    significance = 3,
+                    finished = false
+                ),
+                Task(
+                    noteId = 0,
+                    noteTitle = "Medium Priority Task",
+                    noteAbstract = "This is a medium priority task description.",
+                    ddl = Date(System.currentTimeMillis() + (5 * 24 * 60 * 60 * 1000)), // 5 days from now
+                    significance = 2,
+                    finished = false
+                ),
+                Task(
+                    noteId = 0,
+                    noteTitle = "Low Priority Task",
+                    noteAbstract = "This is a low priority task description.",
+                    ddl = Date(System.currentTimeMillis() + (10 * 24 * 60 * 60 * 1000)), // 10 days from now
+                    significance = 1,
+                    finished = false
+                ),
+                Task(
+                    noteId = 0,
+                    noteTitle = "Completed Task",
+                    noteAbstract = "This task is already finished.",
+                    ddl = Date(System.currentTimeMillis() - (1 * 24 * 60 * 60 * 1000)), // 1 day ago
+                    significance = 3,
+                    finished = false
+                )
+            )
+
+            // Insert tasks into the database
+            dummyTasks.forEach { task ->
+                val resultId = taskDao.insertTask(task) // Get the auto-generated ID
+                Log.d(
+                    "DatabasePopulator",
+                    "Inserted task with ID: $resultId, Title: ${task.noteTitle}"
+                )
+            }
+
+            Log.d("DatabasePopulator", "Inserted ${dummyTasks.size} dummy tasks into the database")
+
+        }
+    }
 }
Index: ../Memomate/app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n\n    <color name=\"dark_gray\">#A9A9A9</color>\n    <color name=\"red\">#A5FF2E2E</color>\n    <color name=\"light_gray\">#D5D5D5</color>\n\n    <color name = \"icon_circle_red\">#A5FF2E2E</color>\n    <color name = \"blue_main_text\">#007CFF</color>\n\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Memomate/app/src/main/res/values/colors.xml b/../Memomate/app/src/main/res/values/colors.xml
--- a/../Memomate/app/src/main/res/values/colors.xml	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ b/../Memomate/app/src/main/res/values/colors.xml	(date 1733618447876)
@@ -10,5 +10,10 @@
     <color name = "icon_circle_red">#A5FF2E2E</color>
     <color name = "blue_main_text">#007CFF</color>
 
+    <color name = "default_day">#00000000</color>
+    <color name = "high_importance">#59FF2E2E</color>
+    <color name = "medium_importance">#70FFD09B</color>
+    <color name = "low_importance">#70BDFEC0</color>
+
 
 </resources>
\ No newline at end of file
Index: ../Memomate/app/src/main/res/layout/calendar_title.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <TextView\n        android:id=\"@+id/monthTitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:gravity=\"start\"\n        android:text=\"January 2022\"\n        android:textColor=\"@android:color/black\"\n        android:textSize=\"20sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginStart=\"12dp\"/>\n\n\n    <!-- Left Button -->\n\n    <ImageView\n        android:id=\"@+id/btnNextMonth\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:contentDescription=\"Next Month\"\n        android:padding=\"8dp\"\n        android:src=\"@drawable/ic_arrow_right\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        android:layout_marginEnd=\"16dp\" />\n\n    <!-- Right Button -->\n    <ImageView\n        android:id=\"@+id/btnPrevMonth\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:contentDescription=\"Previous Month\"\n        android:padding=\"8dp\"\n        android:src=\"@drawable/ic_arrow_left\"\n        app:layout_constraintEnd_toStartOf=\"@id/btnNextMonth\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        android:layout_marginEnd=\"8dp\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Memomate/app/src/main/res/layout/calendar_title.xml b/../Memomate/app/src/main/res/layout/calendar_title.xml
--- a/../Memomate/app/src/main/res/layout/calendar_title.xml	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ b/../Memomate/app/src/main/res/layout/calendar_title.xml	(date 1733631215743)
@@ -9,7 +9,6 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:gravity="start"
-        android:text="January 2022"
         android:textColor="@android:color/black"
         android:textSize="20sp"
         android:textStyle="bold"
Index: ../Memomate/app/src/androidTest/java/com/cs407/memoMate/CalendarTestActivity.kt
===================================================================
diff --git a/../Memomate/app/src/androidTest/java/com/cs407/memoMate/CalendarTestActivity.kt b/../Memomate/app/src/androidTest/java/com/cs407/memoMate/CalendarTestActivity.kt
deleted file mode 100644
--- a/../Memomate/app/src/androidTest/java/com/cs407/memoMate/CalendarTestActivity.kt	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ /dev/null	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
@@ -1,17 +0,0 @@
-package com.cs407.memoMate
-
-import android.os.Bundle
-import androidx.appcompat.app.AppCompatActivity
-
-class FragmentTestActivity : AppCompatActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_fragment_test)
-
-        if (savedInstanceState == null) {
-            supportFragmentManager.beginTransaction()
-                .replace(R.id.fragment_container, CalendarFragment())
-                .commit()
-        }
-    }
-}
Index: ../Memomate/.idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetSelector\">\n    <selectionStates>\n      <SelectionState runConfigName=\"app\">\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\n        <DropdownSelection timestamp=\"2024-11-08T06:01:31.909290Z\">\n          <Target type=\"DEFAULT_BOOT\">\n            <handle>\n              <DeviceId pluginId=\"LocalEmulator\" identifier=\"path=/Users/beccadai/.android/avd/Pixel_6_API_34.avd\" />\n            </handle>\n          </Target>\n        </DropdownSelection>\n        <DialogSelection />\n      </SelectionState>\n      <SelectionState runConfigName=\"FragmentTestActivity (1)\">\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\n      </SelectionState>\n    </selectionStates>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Memomate/.idea/deploymentTargetSelector.xml b/../Memomate/.idea/deploymentTargetSelector.xml
--- a/../Memomate/.idea/deploymentTargetSelector.xml	(revision 76caacac37260e1a5f1ffb4b99bffd40444ad74d)
+++ b/../Memomate/.idea/deploymentTargetSelector.xml	(date 1733630602322)
@@ -15,6 +15,23 @@
       </SelectionState>
       <SelectionState runConfigName="FragmentTestActivity (1)">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2024-12-08T03:35:22.526870Z">
+          <Target type="DEFAULT_BOOT">
+            <handle>
+              <DeviceId pluginId="LocalEmulator" identifier="path=/Users/beccadai/.android/avd/Pixel_6_API_34.avd" />
+            </handle>
+          </Target>
+        </DropdownSelection>
+        <DialogSelection />
+      </SelectionState>
+      <SelectionState runConfigName="FragmentTestActivity">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="FragmentTest">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="CalendarTestActivity">
+        <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
     </selectionStates>
   </component>
